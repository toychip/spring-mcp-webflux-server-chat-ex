plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.4'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    maven { url 'https://repo.spring.io/snapshot' }
    maven {
        name = 'Central Portal Snapshots'
        url = 'https://central.sonatype.com/repository/maven-snapshots/'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // MCP 서버 스타터의 transitive한 MCP SDK 의존성을 제외
    implementation('org.springframework.ai:spring-ai-mcp-server-webflux-spring-boot-starter:1.0.0-M6') {
        exclude group: 'io.modelcontextprotocol.sdk', module: 'mcp-spring-webflux'
        exclude group: 'io.modelcontextprotocol.sdk', module: 'mcp'
    }
    // 명시적으로 MCP SDK 의존성을 버전 0.8.0으로 추가
    implementation 'io.modelcontextprotocol.sdk:mcp:0.8.0'
    implementation 'io.modelcontextprotocol.sdk:mcp-spring-webflux:0.8.0'
}

configurations.all {
    resolutionStrategy {
        force 'io.modelcontextprotocol.sdk:mcp:0.8.0'
        force 'io.modelcontextprotocol.sdk:mcp-spring-webflux:0.8.0'
    }
}

tasks.named('test') {
    useJUnitPlatform()
}
